### Iterative Inorder, Preorder, PostOrder Traversals

## Source Code

    public static class Node {
        int data;
        Node left;
        Node right;

        Node(int data, Node left, Node right) {
            this.data = data;
            this.left = left;
            this.right = right;
        }
    }

    public static class Pair {
        Node node;
        int state;

        Pair(Node node, int state) {
            this.node = node;
            this.state = state;
        }
    }
    public static void iterativePrePostInTraversal(Node node) {
        // write your code here
        String pre = "";
        String in = "";
        String post = "";
        Stack<Pair> s = new Stack<>();
        s.add(new Pair(node,1));
        while(s.size()>0){
            Pair top = s.peek();
            if(top.state == 1){ // pre - state++ - left
                pre += top.node.data+" ";
                top.state += 1;
                if(top.node.left != null){
                    s.push(new Pair(top.node.left,1));
                }
                
            }else if(top.state == 2){ // in - state++ - right
                in += top.node.data+" ";
                top.state += 1;
                if(top.node.right != null){
                    s.push(new Pair(top.node.right,1));
                }
            }else{ // post - pop
                post += top.node.data+" ";
                s.pop();
            }
        }
        System.out.println(pre);
        System.out.println(in);
        System.out.println(post);
    }
