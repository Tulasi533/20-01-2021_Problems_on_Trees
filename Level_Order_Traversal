### Level_Order_Traversal

## Source Code

class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>>result = new ArrayList<>();
        levelOrderTraversal(root, result);
        return result;
    }
    public void levelOrderTraversal(TreeNode root, List<List<Integer>> result){
        if(root == null){
            return;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        while(q.size()>0){
            int count = q.size();
            List<Integer>al = new ArrayList<>();
            for(int i=0; i<count; i++){
                TreeNode t = q.poll();
                al.add(t.val);
                if(t.left != null){
                    q.add(t.left);
                }
                if(t.right != null){
                    q.add(t.right);
                }
            }
            result.add(al);
        }
    }
}
